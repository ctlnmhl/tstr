// Code generated by qtc from "runnerspage.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/runnerspage.qtpl:1
package templates

//line templates/runnerspage.qtpl:1
import "github.com/nanzhong/tstr/db"

//line templates/runnerspage.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/runnerspage.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/runnerspage.qtpl:4
type RunnersPage struct {
	Runners []db.Runner
}

//line templates/runnerspage.qtpl:9
func (p *RunnersPage) StreamTitle(qw422016 *qt422016.Writer) {
//line templates/runnerspage.qtpl:9
	qw422016.N().S(`
Tester
`)
//line templates/runnerspage.qtpl:11
}

//line templates/runnerspage.qtpl:11
func (p *RunnersPage) WriteTitle(qq422016 qtio422016.Writer) {
//line templates/runnerspage.qtpl:11
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/runnerspage.qtpl:11
	p.StreamTitle(qw422016)
//line templates/runnerspage.qtpl:11
	qt422016.ReleaseWriter(qw422016)
//line templates/runnerspage.qtpl:11
}

//line templates/runnerspage.qtpl:11
func (p *RunnersPage) Title() string {
//line templates/runnerspage.qtpl:11
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/runnerspage.qtpl:11
	p.WriteTitle(qb422016)
//line templates/runnerspage.qtpl:11
	qs422016 := string(qb422016.B)
//line templates/runnerspage.qtpl:11
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/runnerspage.qtpl:11
	return qs422016
//line templates/runnerspage.qtpl:11
}

//line templates/runnerspage.qtpl:14
func (p *RunnersPage) StreamBody(qw422016 *qt422016.Writer) {
//line templates/runnerspage.qtpl:14
	qw422016.N().S(`
<div class="runners">
  
  <div class="row">
    <div class="col">
      <h1 class="h5">Runners</h1>
      `)
//line templates/runnerspage.qtpl:20
	if len(p.Runners) > 0 {
//line templates/runnerspage.qtpl:20
		qw422016.N().S(`
      <table class="table table-sm">
        <thead>
          <tr>
            <th scope="col">Name</th>
            <th scope="col">Accept Selectors</th>
            <th scope="col">Reject Selectors </th>
            <th scope="col">Registered</th>
            <th scope="col">Last Heartbeat</th>
          </tr>
        </thead>
        <tbody>

        `)
//line templates/runnerspage.qtpl:33
		for _, runner := range p.Runners {
//line templates/runnerspage.qtpl:33
			qw422016.N().S(`
        <tr>
            <td scope="row"><a href="/runnerss/`)
//line templates/runnerspage.qtpl:35
			qw422016.E().S(runner.ID.String())
//line templates/runnerspage.qtpl:35
			qw422016.N().S(`">`)
//line templates/runnerspage.qtpl:35
			qw422016.E().S(runner.Name)
//line templates/runnerspage.qtpl:35
			qw422016.N().S(`<i class="fas fa-link"></i></a></td>
            <td scope="row">
                `)
//line templates/runnerspage.qtpl:37
			for _, label := range labelsAsSlice(runner.AcceptTestLabelSelectors, ": ") {
//line templates/runnerspage.qtpl:37
				qw422016.N().S(`
                <span class="badge bg-secondary">`)
//line templates/runnerspage.qtpl:38
				qw422016.E().S(label)
//line templates/runnerspage.qtpl:38
				qw422016.N().S(`</span>
                `)
//line templates/runnerspage.qtpl:39
			}
//line templates/runnerspage.qtpl:39
			qw422016.N().S(`
            </td>
            <td scope="row">
                `)
//line templates/runnerspage.qtpl:42
			for _, label := range labelsAsSlice(runner.RejectTestLabelSelectors, ": ") {
//line templates/runnerspage.qtpl:42
				qw422016.N().S(`
                <span class="badge bg-secondary">`)
//line templates/runnerspage.qtpl:43
				qw422016.E().S(label)
//line templates/runnerspage.qtpl:43
				qw422016.N().S(`</span>
                `)
//line templates/runnerspage.qtpl:44
			}
//line templates/runnerspage.qtpl:44
			qw422016.N().S(`
            </td>
            <td>`)
//line templates/runnerspage.qtpl:46
			if runner.RegisteredAt.Valid {
//line templates/runnerspage.qtpl:46
				qw422016.N().S(` `)
//line templates/runnerspage.qtpl:46
				streamtimeCell(qw422016, runner.RegisteredAt)
//line templates/runnerspage.qtpl:46
				qw422016.N().S(` `)
//line templates/runnerspage.qtpl:46
			}
//line templates/runnerspage.qtpl:46
			qw422016.N().S(`</td>
            <td>`)
//line templates/runnerspage.qtpl:47
			if runner.LastHeartbeatAt.Valid {
//line templates/runnerspage.qtpl:47
				qw422016.N().S(` `)
//line templates/runnerspage.qtpl:47
				streamtimeCell(qw422016, runner.LastHeartbeatAt)
//line templates/runnerspage.qtpl:47
				qw422016.N().S(` `)
//line templates/runnerspage.qtpl:47
			}
//line templates/runnerspage.qtpl:47
			qw422016.N().S(`</td>
        </tr>
        `)
//line templates/runnerspage.qtpl:49
		}
//line templates/runnerspage.qtpl:49
		qw422016.N().S(`
        </tbody>
      </table>
      `)
//line templates/runnerspage.qtpl:52
	} else {
//line templates/runnerspage.qtpl:52
		qw422016.N().S(`
      <p>No registered runners</p>
      `)
//line templates/runnerspage.qtpl:54
	}
//line templates/runnerspage.qtpl:54
	qw422016.N().S(`
    </div>
  </div>
</div>
`)
//line templates/runnerspage.qtpl:58
}

//line templates/runnerspage.qtpl:58
func (p *RunnersPage) WriteBody(qq422016 qtio422016.Writer) {
//line templates/runnerspage.qtpl:58
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/runnerspage.qtpl:58
	p.StreamBody(qw422016)
//line templates/runnerspage.qtpl:58
	qt422016.ReleaseWriter(qw422016)
//line templates/runnerspage.qtpl:58
}

//line templates/runnerspage.qtpl:58
func (p *RunnersPage) Body() string {
//line templates/runnerspage.qtpl:58
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/runnerspage.qtpl:58
	p.WriteBody(qb422016)
//line templates/runnerspage.qtpl:58
	qs422016 := string(qb422016.B)
//line templates/runnerspage.qtpl:58
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/runnerspage.qtpl:58
	return qs422016
//line templates/runnerspage.qtpl:58
}
