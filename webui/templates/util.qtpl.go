// Code generated by qtc from "util.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/util.qtpl:1
package templates

//line templates/util.qtpl:1
import "time"

//line templates/util.qtpl:2
import "fmt"

//line templates/util.qtpl:3
import "database/sql"

//line templates/util.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/util.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/util.qtpl:6
func streamfmtAbsTime(qw422016 *qt422016.Writer, t time.Time) {
//line templates/util.qtpl:6
	qw422016.N().S(`
    `)
//line templates/util.qtpl:7
	qw422016.E().S(t.Format("2006-01-02 15:04:05"))
//line templates/util.qtpl:7
	qw422016.N().S(`
`)
//line templates/util.qtpl:8
}

//line templates/util.qtpl:8
func writefmtAbsTime(qq422016 qtio422016.Writer, t time.Time) {
//line templates/util.qtpl:8
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/util.qtpl:8
	streamfmtAbsTime(qw422016, t)
//line templates/util.qtpl:8
	qt422016.ReleaseWriter(qw422016)
//line templates/util.qtpl:8
}

//line templates/util.qtpl:8
func fmtAbsTime(t time.Time) string {
//line templates/util.qtpl:8
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/util.qtpl:8
	writefmtAbsTime(qb422016, t)
//line templates/util.qtpl:8
	qs422016 := string(qb422016.B)
//line templates/util.qtpl:8
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/util.qtpl:8
	return qs422016
//line templates/util.qtpl:8
}

//line templates/util.qtpl:10
func streamfmtRelativeTime(qw422016 *qt422016.Writer, t time.Time) {
//line templates/util.qtpl:10
	qw422016.N().S(`
    `)
//line templates/util.qtpl:11
	qw422016.E().S(fmt.Sprintf("%s ago", time.Since(t).Round(time.Second).String()))
//line templates/util.qtpl:11
	qw422016.N().S(`
`)
//line templates/util.qtpl:12
}

//line templates/util.qtpl:12
func writefmtRelativeTime(qq422016 qtio422016.Writer, t time.Time) {
//line templates/util.qtpl:12
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/util.qtpl:12
	streamfmtRelativeTime(qw422016, t)
//line templates/util.qtpl:12
	qt422016.ReleaseWriter(qw422016)
//line templates/util.qtpl:12
}

//line templates/util.qtpl:12
func fmtRelativeTime(t time.Time) string {
//line templates/util.qtpl:12
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/util.qtpl:12
	writefmtRelativeTime(qb422016, t)
//line templates/util.qtpl:12
	qs422016 := string(qb422016.B)
//line templates/util.qtpl:12
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/util.qtpl:12
	return qs422016
//line templates/util.qtpl:12
}

//line templates/util.qtpl:14
func streamtimeCell(qw422016 *qt422016.Writer, timestamp sql.NullTime) {
//line templates/util.qtpl:14
	qw422016.N().S(`
    <span data-toggle="tooltip" data-placement="top" title="`)
//line templates/util.qtpl:15
	qw422016.E().S(fmtAbsTime(timestamp.Time))
//line templates/util.qtpl:15
	qw422016.N().S(`">`)
//line templates/util.qtpl:15
	qw422016.E().S(fmtRelativeTime(timestamp.Time))
//line templates/util.qtpl:15
	qw422016.N().S(`</span>
`)
//line templates/util.qtpl:16
}

//line templates/util.qtpl:16
func writetimeCell(qq422016 qtio422016.Writer, timestamp sql.NullTime) {
//line templates/util.qtpl:16
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/util.qtpl:16
	streamtimeCell(qw422016, timestamp)
//line templates/util.qtpl:16
	qt422016.ReleaseWriter(qw422016)
//line templates/util.qtpl:16
}

//line templates/util.qtpl:16
func timeCell(timestamp sql.NullTime) string {
//line templates/util.qtpl:16
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/util.qtpl:16
	writetimeCell(qb422016, timestamp)
//line templates/util.qtpl:16
	qs422016 := string(qb422016.B)
//line templates/util.qtpl:16
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/util.qtpl:16
	return qs422016
//line templates/util.qtpl:16
}
