syntax = "proto3";

package tstr.admin.v1;

import "common/v1/common.proto";
import "google/protobuf/duration.proto";
import "validate/validate.proto";

option go_package =  "github.com/nanzhong/tstr/api/admin/v1;admin";

service AdminService {
  rpc IssueAccessToken(IssueAccessTokenRequest) returns (IssueAccessTokenResponse);
  rpc GetAccessToken(GetAccessTokenRequest) returns (GetAccessTokenResponse);
  rpc ListAccessTokens(ListAccessTokensRequest) returns (ListAccessTokensResponse);
  rpc RevokeAccessToken(RevokeAccessTokenRequest) returns (RevokeAccessTokenResponse);
}

message IssueAccessTokenRequest {
  string name = 1
    [(validate.rules).string = {min_len: 1, max_len: 200}];
  repeated tstr.common.v1.AccessToken.Scope scopes = 2
    [(validate.rules).repeated = {min_items: 1, unique: true, items: {enum: {in: [1,2,3,4]}}}];
  google.protobuf.Duration valid_duration = 3;
}

message IssueAccessTokenResponse {
  tstr.common.v1.AccessToken access_token = 1; // required
}

message GetAccessTokenRequest {
  string id = 1
    [(validate.rules).string.len = 36];
}

message GetAccessTokenResponse {
  tstr.common.v1.AccessToken access_token = 1; // required
}

message ListAccessTokensRequest {
  bool include_expired = 1;
  bool include_revoked = 2;
}

message ListAccessTokensResponse {
  repeated tstr.common.v1.AccessToken access_tokens = 1; // required
}

message RevokeAccessTokenRequest {
  string id = 1
    [(validate.rules).string.len = 36];
}

message RevokeAccessTokenResponse {}
