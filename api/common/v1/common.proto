syntax = "proto3";

package tstr.common.v1;

import "google/protobuf/timestamp.proto";

option go_package =  "github.com/nanzhong/tstr/api/common/v1;common";

message Test {
  message RunConfig {
    string version = 1; // required (generated)
    string container_image = 2 [json_name="container_image"]; // required
    string command = 3;
    repeated string args = 4;
    map<string, string> env = 5;

    google.protobuf.Timestamp created_at = 10 [json_name="created_at"]; // required
  }

  string id = 1; // required (generated)
  string name = 2; // required
  map<string, string> labels = 3;
  string cron_schedule = 4 [json_name="cron_schedule"];
  RunConfig run_config = 5 [json_name="run_config"]; // required

  google.protobuf.Timestamp registered_at = 10 [json_name="registered_at"]; // required
  google.protobuf.Timestamp updated_at = 11 [json_name="updated_at"]; // required
  google.protobuf.Timestamp archived_at = 12 [json_name="archived_at"];
}

message TestSuite {
  string id = 1; // required (generated)
  string name = 2;
  map<string, string> labels = 3;

  google.protobuf.Timestamp created_at = 10 [json_name="created_at"]; // required
  google.protobuf.Timestamp updated_at = 11 [json_name="updated_at"]; // required
  google.protobuf.Timestamp archived_at = 12 [json_name="archived_at"];
}

message Run {
  enum Result {
    UNKNOWN = 0;
    PASS = 1;
    FAIL = 2;
    ERROR = 3;
  }

  message Log {
    enum Output {
      UNKNOWN = 0;
      STDOUT = 1;
      STDERR = 2;
    }

    string time = 1; // required
    Output output_type = 2 [json_name="output_type"]; // required
    bytes data = 3; // required
  }

  string id = 1;  // required (generated)
  string test_id = 2 [json_name="test_id"]; // required
  Test.RunConfig test_run_config = 3 [json_name="test_run_config"]; // required
  string runner_id = 4 [json_name="runner_id"];
  Result result = 5;
  repeated Log logs = 6;

  google.protobuf.Timestamp scheduled_at = 10 [json_name="scheduled_at"]; // required
  google.protobuf.Timestamp started_at = 11 [json_name="started_at"];
  google.protobuf.Timestamp finished_at = 12 [json_name="finished_at"];
}

message Runner {
  string id = 1; // required (generated)
  string name = 2; // required
  map<string, string> accept_test_labels = 3 [json_name="accept_test_labels"];
  map<string, string> reject_test_labels = 4 [json_name="reject_test_labels"];

  google.protobuf.Timestamp registered_at = 10 [json_name="registered_at"]; // required
  google.protobuf.Timestamp approved_at = 11 [json_name="approved_at"];
  google.protobuf.Timestamp last_heartbeat_at = 12 [json_name="last_heartbeat_at"];
}

message AccessToken {
  enum Scope {
    UNKNOWN = 0;
    ADMIN = 1;
    CONTROL_R = 2;
    CONTROL_RW = 3;
  }

  string id = 1; // required (generated)
  string name = 2; // required
  string token = 3; // required (generated) will be present only on issuance, empty otherwise
  repeated Scope scopes = 4; // required

  google.protobuf.Timestamp issued_at = 10 [json_name="issued_at"]; // required
  google.protobuf.Timestamp expires_at = 11 [json_name="expires_at"];
  google.protobuf.Timestamp revoked_at = 12 [json_name="revoked_at"];
}
