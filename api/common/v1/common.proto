syntax = "proto3";

package tstr.common.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message Test {
  message RunConfig {
    string container_image = 2; // required
    string command = 3;
    repeated string args = 4;
    map<string, string> env = 5;
    google.protobuf.Duration timeout = 6;
  }
  message Matrix {
    message LabelValues {
      repeated string values = 1;
    }
    map<string, LabelValues> labels = 1;
  }

  string id = 1; // required (generated)
  string namespace = 2; // required
  string name = 3; // required
  RunConfig run_config = 4; // required
  map<string, string> labels = 5;
  string cron_schedule = 6;
  google.protobuf.Timestamp next_run_at = 7;
  Matrix matrix = 8;

  google.protobuf.Timestamp registered_at = 10; // required
  google.protobuf.Timestamp updated_at = 11; // required
}

message Run {
  enum Result {
    UNKNOWN = 0;
    PASS = 1;
    FAIL = 2;
    ERROR = 3;
  }

  message Log {
    enum Output {
      UNKNOWN = 0;
      STDOUT = 1;
      STDERR = 2;
      TSTR = 3;
    }

    string time = 1; // required
    Output output_type = 2; // required
    bytes data = 3; // required
  }

  string id = 1;  // required (generated)
  string test_id = 2; // required
  Test.RunConfig test_run_config = 3; // required
  string test_matrix_id = 4;
  map<string, string> labels = 5;
  string runner_id = 6;
  Result result = 7;
  repeated Log logs = 8;
  map<string, string> result_data = 9;
  google.protobuf.Timestamp scheduled_at = 10; // required
  google.protobuf.Timestamp started_at = 11;
  google.protobuf.Timestamp finished_at = 12;
}

message Runner {
  string id = 1; // required (generated)
  string name = 2; // required
  repeated string namespace_selectors = 3; // required
  map<string, string> accept_test_label_selectors = 4;
  map<string, string> reject_test_label_selectors = 5;

  google.protobuf.Timestamp registered_at = 10; // required
  google.protobuf.Timestamp last_heartbeat_at = 11;
}

message AccessToken {
  enum Scope {
    UNKNOWN = 0;
    ADMIN = 1;
    CONTROL = 2;
    DATA = 3;
    RUNNER = 4;
  }

  string id = 1; // required (generated)
  string name = 2; // required
  string token = 3; // required (generated) will be present only on issuance, empty otherwise
  repeated string namespace_selectors = 4; // required
  repeated Scope scopes = 5; // required

  google.protobuf.Timestamp issued_at = 10; // required
  google.protobuf.Timestamp expires_at = 11;
  google.protobuf.Timestamp revoked_at = 12;
}
