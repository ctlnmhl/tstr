syntax = "proto3";

package tstr.runner.v1;

import "api/common/v1/common.proto";

import "google/protobuf/timestamp.proto";

option go_package =  "github.com/nanzhong/tstr/api/runner/v1;runner";

service RunnerService {
  rpc RegisterRunner(RegisterRunnerRequest) returns (RegisterRunnerResponse);
  rpc NextRun(NextRunRequest) returns (NextRunResponse);
  rpc SubmitRun(stream SubmitRunRequest) returns (SubmitRunResponse);
}

message RegisterRunnerRequest {
  string name = 1; // required
  map<string, string> accept_test_labels = 2 [json_name="accept_test_labels"];
  map<string, string> reject_test_labels = 3 [json_name="reject_test_labels"];
}

message RegisterRunnerResponse {
  repeated tstr.common.v1.Runner runner = 1; // required
}

message NextRunRequest {
  map<string, string> accept_test_labels = 1 [json_name="accept_test_labels"];
  map<string, string> reqect_test_labels = 2 [json_name="reject_test_labels"];
}

message NextRunResponse {
  tstr.common.v1.Run run = 1; // required
}

message SubmitRunRequest {
  tstr.common.v1.Run.Result result = 1;
  repeated tstr.common.v1.Run.Log logs = 2;

  google.protobuf.Timestamp started_at = 10 [json_name="started_at"];
  google.protobuf.Timestamp finished_at = 11 [json_name="finished_at"];
}

message SubmitRunResponse {}
