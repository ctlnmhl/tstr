syntax = "proto3";

package tstr.runner.v1;

import "api/common/v1/common.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package =  "github.com/nanzhong/tstr/api/runner/v1;runner";

service RunnerService {
  rpc RegisterRunner(RegisterRunnerRequest) returns (RegisterRunnerResponse);
  rpc NextRun(NextRunRequest) returns (NextRunResponse);
  rpc SubmitRun(stream SubmitRunRequest) returns (SubmitRunResponse);
}

message RegisterRunnerRequest {
  string name = 1
    [(validate.rules).string = {min_len: 1, max_len: 200}];
  map<string, string> accept_test_label_selectors = 2 [json_name="accept_test_label_selectors"];
  map<string, string> reject_test_label_selectors = 3 [json_name="reject_test_label_selectors"];
}

message RegisterRunnerResponse {
  tstr.common.v1.Runner runner = 1; // required
}

message NextRunRequest {
  string id = 1
    [(validate.rules).string.uuid = true];
}

message NextRunResponse {
  tstr.common.v1.Run run = 1; // required
}

message SubmitRunRequest {
  string id = 1
    [(validate.rules).string.uuid = true];
  string run_id = 2
    [(validate.rules).string.uuid = true];
  tstr.common.v1.Run.Result result = 3;
  repeated tstr.common.v1.Run.Log logs = 4;

  google.protobuf.Timestamp started_at = 10 [json_name="started_at"];
  google.protobuf.Timestamp finished_at = 11 [json_name="finished_at"];
}

message SubmitRunResponse {}
